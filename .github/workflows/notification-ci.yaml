name: notification-service ci

on:
   push:
      branches: [ "main" ]
      paths:
         - "notification-service/**"
         - ".github/workflows/actions/action.yaml"
         - ".github/workflows/notification-ci.yaml"
         - "pom.xml"
   pull_request:
      branches: [ "main" ]
      paths:
         - "notification-service/**"
         - ".github/workflows/actions/action.yaml"
         - ".github/workflows/notification-ci.yaml"
         - "pom.xml"
   workflow_dispatch:

jobs:
   Build:
      runs-on: ubuntu-latest
      env:
         FROM_ORIGINAL_REPOSITORY: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.ref == 'refs/heads/main' }}
      permissions:
         contents: read
         packages: write
         attestations: write
         id-token: write
      steps:
         -  uses: actions/checkout@v4
            with:
               fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
         -  uses: ./.github/workflows/actions
         -  name: Run Maven Build Command
            run: mvn clean install -pl notification-service -am -DskipTests
         #         -  name: Run Maven Test
         #            run: mvn test -f notification-service
         #         -  name: Unit Test Results
         #            uses: dorny/test-reporter@v1
         #            if: ${{ env.FROM_ORIGINAL_REPOSITORY == 'true' && (success() || failure()) }}
         #            with:
         #               name: Unit-Test-Results
         #               path: "notification-service/**/surefire-reports/*.xml"
         #               reporter: java-junit
         #         -  name: Analyze with sonar cloud
         #            if: ${{ env.FROM_ORIGINAL_REPOSITORY == 'true' }}
         #            env:
         #               SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         #            run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -f notification-service
         -  name: Log in to the Container registry
            if: ${{ github.ref == 'refs/heads/main' }}
            uses: docker/login-action@v3
            with:
               registry: ghcr.io
               username: ${{ github.actor }}
               password: ${{ secrets.GITHUB_TOKEN }}
         -  name: Build and push Docker images
            if: ${{ github.ref == 'refs/heads/main' }}
            uses: docker/build-push-action@v6
            with:
               context: ./notification-service
               push: true
               tags: ghcr.io/hiepthanhtran/scms-notification:latest
         -  name: Make Docker image public using REST API
            if: ${{ github.ref == 'refs/heads/main' }}
            run: |
               curl -X PATCH \
                 -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Accept: application/vnd.github.v3+json" \
                 https://api.github.com/user/packages/container/scms-notification/versions \
                 -d '{"visibility":"public"}'
