# Server configuration
server:
   port: 8087
   servlet:
      context-path: /order
      encoding:
         charset: UTF-8
         enabled: true
         force: true

# Spring configuration
spring:
   application:
      name: order-service
   datasource:
      url: ${DBMS_URL:jdbc:mysql://localhost:3306/order_service}
      driverClassName: "com.mysql.cj.jdbc.Driver"
      username: ${DBMS_USERNAME:root}
      password: ${DBMS_PASSWORD:root}
   jpa:
      open-in-view: false
      hibernate:
         ddl-auto: update
   kafka:
      bootstrap-servers: PLAINTEXT://kafka:9094
      producer:
         key-serializer: org.apache.kafka.common.serialization.StringSerializer
         value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      consumer:
         auto-offset-reset: earliest
         group-id: order-service-group
         key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
         value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
         properties:
            spring.json.trusted.packages: "*"
            spring.json.value.default.type: "com.tth.commonlibrary.event.dto.NotificationEvent"
   servlet:
      multipart:
         max-file-size: 10MB
         max-request-size: 10MB

# Application configuration
app:
   services:
      stripe:
         secret-key: ${STRIPE_SECRET_KEY}
      identity:
         url: ${IDENTITY_SERVICE_URL:http://localhost:8083/identity}
      product:
         url: ${PRODUCT_SERVICE_URL:http://localhost:8084/product}
      inventory:
         url: ${INVENTORY_SERVICE_URL:http://localhost:8086/inventory}