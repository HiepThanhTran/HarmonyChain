server {
  server_name api.scms.local;

  # Docker DNS
  resolver 127.0.0.11;

  location /swagger-ui/ {
    proxy_pass http://swagger-ui:8080;
  }
  location /cart/ {
    proxy_pass http://scms-cart:8081;
  }
  location /profile/ {
    proxy_pass http://scms-profile:8082;
  }
  location /identity/ {
    proxy_pass http://scms-identity:8083;
  }
  location /product/ {
    proxy_pass http://scms-product:8084;
  }
  location /rating/ {
    proxy_pass http://scms-rating:8085;
  }
  location /inventory/ {
    proxy_pass http://scms-inventory:8086;
  }
  location /order/ {
    proxy_pass http://scms-order:8087;
  }
  location /shipment/ {
    proxy_pass http://scms-shipment:8088;
  }
  # location /search/ {
    # #hack to prevent nginx to resolve container's host on start up
    # set $docker_search_host "search";
    # proxy_pass http://$docker_search_host;
  # }
  # location /webhook/ {
    # proxy_pass http://webhook;
  # }
}

# server {
  # server_name identity;
  # large_client_header_buffers 8 32k;
  # location / {
    # proxy_pass http://identity;
    # proxy_set_header Host $host;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # # Workaround to void CORS error from Reactjs
    # if ($uri ~ "^(.*)/(protocol/openid-connect/auth|login/oauth2/code)(.*)") {
    	# add_header Access-Control-Allow-Origin *;
    # }
  # }
# }

# server {
  # server_name storefront;
  # location / {
    # proxy_pass http://storefront;
  # }
# }

# server {
  # server_name backoffice;
  # location / {
    # proxy_pass http://backoffice;
  # }
# }

server {
  server_name kafka;

  resolver 127.0.0.11;

  location / {
    proxy_pass http://kafka:9092;
  }
}

server {
  server_name phpmyadmin.scms.local;

  location / {
    proxy_pass http://phpmyadmin;
  }
}

# server {
  # server_name grafana;

  # resolver 127.0.0.11;

  # location / {
    # set $docker_grafana_host "grafana";
    # proxy_pass http://$docker_grafana_host:3000;
  # }
# }

# server {
  # server_name elasticsearch;

  # resolver 127.0.0.11;

  # location / {
    # set $docker_elasticsearch_host "elasticsearch";
    # proxy_pass http://$docker_elasticsearch_host:9200;
  # }
# }