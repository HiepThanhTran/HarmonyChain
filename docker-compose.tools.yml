name: scms

networks:
   hscm-network:
      driver: bridge
      name: hscm-network

volumes:
   mysql:

services:
   #   nginx:
   #      image: 'nginx:1.25.3'
   #      restart: unless-stopped
   #      container_name: hscm-nginx
   #      ports:
   #         - "80:80"
   #      volumes:
   #         - ./docker/server/templates:/etc/nginx/templates
   #         - ./docker/server/configuration/custom_proxy_settings.conf:/etc/nginx/conf.d/custom_proxy_settings.conf
   #      networks:
   #         - hscm-network
   kafka:
      image: 'bitnami/kafka:3.7.0'
      restart: unless-stopped
      container_name: hscm-kafka
      hostname: kafka
      ports:
         - '9094:9094'
      environment:
         - KAFKA_ENABLE_KRAFT=yes
         - KAFKA_CFG_PROCESS_ROLES=controller,broker
         - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
         - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
         - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
         - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.01:9094,EXTERNAL://localhost:9094
         - KAFKA_BROKER_ID=1
         - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
         - ALLOW_PLAINTEXT_LISTENER=yes
         - KAFKA_CFG_NODE_ID=1
         - KAFKA_KRAFT_CLUSTER_ID=hscm-kafka
         - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      healthcheck:
         test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9094" ]
         interval: 10s
         timeout: 5s
         retries: 5
      networks:
         - hscm-network
   mysql:
      image: 'mysql:8.0.39-debian'
      restart: unless-stopped
      hostname: mysql
      container_name: hscm-mysql
      ports:
         - '3306:3306'
      environment:
         - MYSQL_ROOT_PASSWORD=root
      volumes:
         - ./docker/db/mysql_initial.sql:/docker-entrypoint-initdb.d/mysql_initial.sql
         - mysql:/var/lib/mysql
      networks:
         - hscm-network
   mongodb:
      image: 'bitnami/mongodb:7.0.11'
      restart: unless-stopped
      hostname: mongodb
      container_name: hscm-mongodb
      ports:
         - '27017:27017'
      environment:
         - MONGODB_ROOT_USER=root
         - MONGODB_ROOT_PASSWORD=root
      networks:
         - hscm-network
   neo4j:
      image: 'neo4j:latest'
      restart: unless-stopped
      hostname: neo4j
      container_name: hscm-neo4j
      ports:
         - '7474:7474'
         - '7687:7687'
      environment:
         - NEO4J_AUTH=neo4j/admin@123
      networks:
         - hscm-network