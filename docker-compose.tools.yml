name: scms

networks:
   scms-network:
      driver: bridge
      name: scms-network

volumes:
   mysql:

services:
   #   nginx:
   #      image: 'nginx:1.25.3'
   #      restart: unless-stopped
   #      hostname: nginx
   #      container_name: nginx
   #      ports:
   #         - "80:80"
   #      volumes:
   #         - ./docker/nginx/templates:/etc/nginx/templates
   #         - ./docker/nginx/configuration/custom_proxy_settings.conf:/etc/nginx/conf.d/custom_proxy_settings.conf
   #      networks:
   #         - scms-network
   zookeeper:
      image: 'confluentinc/cp-zookeeper:6.2.1'
      restart: unless-stopped
      hostname: zookeeper
      container_name: zookeeper
      environment:
         - ZOOKEEPER_CLIENT_PORT=2181
         - ZOOKEEPER_ADMIN_ENABLE_SERVER=false
      networks:
         - scms-network
   kafka:
      image: 'confluentinc/cp-kafka:6.2.1'
      restart: unless-stopped
      hostname: kafka
      container_name: kafka
      ports:
         - 9092:9092
      environment:
         - KAFKA_BROKER_ID=0
         - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
         - KAFKA_NUM_PARTITIONS=12
         - KAFKA_COMPRESSION_TYPE=gzip
         - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
         - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
         - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
         - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
         - KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE=false
         - KAFKA_JMX_PORT=9091
         - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
         - KAFKA_AUTHORIZER_CLASS_NAME=kafka.security.auth.SimpleAclAuthorizer
         - KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND=true
      links:
         - zookeeper
      networks:
         - scms-network
   swagger-ui:
      image: 'swaggerapi/swagger-ui:v4.16.0'
      restart: unless-stopped
      hostname: swagger-ui
      container_name: swagger-ui
      environment:
         - BASE_URL=/swagger-ui
         - URLS
         - OAUTH_CLIENT_ID=swagger-ui
         - OAUTH_USE_PKCE=true
      networks:
         - scms-network
   #   phpmyadmin:
   #      image: 'phpmyadmin/phpmyadmin:5.1.1'
   #      restart: unless-stopped
   #      hostname: phpmyadmin
   #      container_name: phpmyadmin
   #      ports:
   #         - '8090:81'
   #      environment:
   #         - PMA_HOST=mysql
   #         - MYSQL_ROOT_PASSWORD=root
   #      depends_on:
   #         -  mysql
   #      networks:
   #         - scms-network
   mysql:
      image: 'mysql:8.0.39-debian'
      restart: unless-stopped
      hostname: mysql
      container_name: mysql
      ports:
         - '3306:3306'
      environment:
         - MYSQL_ROOT_PASSWORD=root
      volumes:
         - ./docker/db/mysql_initial.sql:/docker-entrypoint-initdb.d/mysql_initial.sql
         - mysql:/var/lib/mysql
      networks:
         - scms-network
   mongodb:
      image: 'bitnami/mongodb:7.0.11'
      restart: unless-stopped
      hostname: mongodb
      container_name: mongodb
      ports:
         - '27017:27017'
      environment:
         - MONGODB_ROOT_USER=root
         - MONGODB_ROOT_PASSWORD=root
      networks:
         - scms-network
   neo4j:
      image: 'neo4j:latest'
      restart: unless-stopped
      hostname: neo4j
      container_name: neo4j
      ports:
         - '7474:7474'
         - '7687:7687'
      environment:
         - NEO4J_AUTH=neo4j/admin@123
      networks:
         - scms-network